name: 'Setup Environment'
description: 'Sets up the environment for build and deployment'

inputs:
  setupCache:
    description: 'Whether to set up caching'
    required: false
    default: 'true'
  pythonVersion:
    description: 'Python version to use'
    required: false
    default: '3.10'

outputs:
  cacheHit:
    description: 'Whether the cache was hit'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.pythonVersion }}
    
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        pip install pytest pytest-cov
    
    - name: Cache Python dependencies
      if: inputs.setupCache == 'true'
      id: cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Helm
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    
    - name: Install security tools
      shell: bash
      run: |
        # Install kubesec
        curl -s https://raw.githubusercontent.com/controlplaneio/kubesec/master/install.sh | bash
