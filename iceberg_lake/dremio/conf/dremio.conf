#
# Configuration file for Dremio
#

paths: {
  # Local storage path for Dremio
  local: ${DREMIO_HOME}"/data"
  
  # Distributed storage path for Dremio
  # This is used for job results, downloads, uploads, etc.
  dist: "pdfs://"${paths.local}"/pdfs"
}

services: {
  # Coordinator and Executor are required services. They can be run on
  # the same machine or different machines.
  
  # Coordinator service
  coordinator: {
    enabled: true
    
    # Host name for Dremio
    host: "0.0.0.0"
    
    # Web server port
    web.port: 9047
    
    # Client connection port
    client.port: 31010
    
    # How long to wait before timing out distributed coordinator communication
    # Default is 30000 ms
    # distributed.max-wait-timeout: 30000
    
    # How long to wait for a node to join the cluster before giving up
    # Default is 60000 ms
    # startup.timeout: 60000
    
    # Enable verbose startup (for debugging)
    # verbose: false
    
    # Maximum memory to use (in MB)
    auto.initialization: true
    
    # Executor selector type
    # executor.selector.type: "org.apache.drill.exec.work.foreman.RoundRobinNodeSelector"
    
    # Default timezone for the coordinator
    # timezone: "UTC"
    
    # Default queue configuration
    # scheduler.queue-default: "SMALL"
  }
  
  # Executor service
  executor: {
    enabled: true
    
    # Enable support for spilling to disk
    spilling.enabled: true
    
    # Enable temporary batch management (for large datasets)
    tmp-batch-management: true
  }
  
  # Master service (required for master-slave setup)
  master: {
    enabled: false
  }
}

# Cluster ID (must be unique per cluster)
cluster-id: "dremio-iceberg-local"

# Zookeeper configuration
zookeeper: {
  # Use embedded Zookeeper for single-node deployment
  # Use external Zookeeper for clustered deployment
  client: {
    embedded: true
  }
}

# Default provisioning options
provisioning: {
  yarn: {
    enabled: false
  }
  docker: {
    enabled: false
  }
}

# Iceberg source catalog template for integration
source.iceberg: {
  metastore.client.factory.class: "org.apache.iceberg.hadoop.HadoopCatalogFactory"
  mode: "hadoop"
  warehouse: "s3a://warehouse"
  fs.defaultFS: "s3a://warehouse"
  fs.s3a.access.key: "minioadmin"
  fs.s3a.secret.key: "minioadmin"
  fs.s3a.endpoint: "minio:9000"
  fs.s3a.path.style.access: "true"
  fs.s3a.connection.ssl.enabled: "false"
}

# S3 Connection Properties
dremio.s3: {
  aws.access.key: "minioadmin"
  aws.secret.key: "minioadmin"
  aws.region: "us-east-1"
  endpoint: "http://minio:9000"
  path-style-access: true
  ssl.enabled: false
  connection.pooling.enabled: true
}